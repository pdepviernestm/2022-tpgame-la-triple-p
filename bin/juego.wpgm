import wollok.game.*
import pokemon.*

object cartel{
	var property imagen = "Cartel.png"
	
    method image() = imagen
}

object victoria{
	method image() = "Victoria.png"
}
object derrota{
	method image() = "Derrota.png"
}

object hpJugador{
	var property text
}

object hpCompu{
	var property text
}

object batalla{
	const pokemonCompu = snorlax2
	var property pokemonJugador
	
	
	method actualizarVidas(){
		hpJugador.text(pokemonJugador.hp().toString())
	    hpCompu.text(pokemonCompu.hp().toString())
	}
	
	method ataqueJugador(){
		seleccionador.posicionActual().efecto(pokemonCompu,pokemonJugador)
	}
	
	method ataqueCompu(){
		const indiceRandom = 0.randomUpTo(3).roundUp()
		pokemonCompu.movimientos().get(indiceRandom).efecto(pokemonJugador,pokemonCompu)
	}
	
	method muerto(pokemon)= pokemon.hp()==0
	
	method anadirVisuals(){
		game.addVisualIn(pokemonJugador,game.at(4,1))
		game.addVisualIn(pokemonCompu,game.at(13,10))	
	    game.addVisualIn(hpJugador,game.at(13,7))
	    game.addVisualIn(hpCompu,game.at(3,10))
		game.addVisualIn(cartel, game.at(1,1))
		
		//							ratio, altura,inicial
		visuals.anadirListaVisuals(game.width()*0.2,3,3)
	}
	
	method start(){
		seleccionador.lista(pokemonJugador.movimientos())
		self.actualizarVidas()
		self.anadirVisuals()
		manager.botones()
	    
	    keyboard.enter().onPressDo({
	     	self.ataqueJugador()
	     	self.actualizarVidas()
	      
	     	if(self.muerto(pokemonCompu))
	     	{
	      		game.clear()
	      		finalizarJuego.ganaste()
	      	}else{
	        	self.ataqueCompu()
	        	self.actualizarVidas()
	      	}
	      	if(self.muerto(pokemonJugador))
	      	{
	      		game.clear()
	      		finalizarJuego.perdiste()
	      	}
	     })		
	}
}

object finalizarJuego{
	method ganaste(){
		game.addVisualIn(victoria,game.origin())
	}
	method perdiste(){
		game.addVisualIn(derrota,game.origin())
	}
}

object seleccionador{
	var property lista 
	var indice = 0
	
	method moverDerecha(){
		self.posicionActual().deseleccionar()
		indice = 3.min(indice+1)
		self.posicionActual().seleccionar()
	}
	
	method moverIzquierda(){
		self.posicionActual().deseleccionar()
		indice = 0.max(indice-1)
		self.posicionActual().seleccionar()
	}
	
	method posicionActual() = lista.get(indice)
	
}

object visuals{
	var x
    method anadirListaVisuals(ratio,altura,inicial){
    	x = inicial
    	seleccionador.lista().forEach{elemento => 
				game.addVisualIn(elemento,game.at(x,altura))
				x+=ratio
			}
    }
}

object manager{
	var property listaPokemons = [snorlax,snorlax2,snorlax3,snorlax4]
		
	method botones(){
		keyboard.right().onPressDo({
      		seleccionador.moverDerecha()
    	})
      
    	keyboard.left().onPressDo({
      		seleccionador.moverIzquierda()
    	})
	}
	
	method start(){
		seleccionador.lista(listaPokemons)
		self.botones()
		//							ratio, altura, inicial
		visuals.anadirListaVisuals(game.width()/4,3,0)
		
		keyboard.enter().onPressDo({
      		batalla.pokemonJugador(seleccionador.posicionActual())
      		game.clear()
      		batalla.start()
    	})
	}
	
	
}

program juego {
    game.title("Pokemon")

    game.width(20)
    game.height(15)
    game.boardGround("background.jpg")
	
	manager.start()
    game.start()


}
